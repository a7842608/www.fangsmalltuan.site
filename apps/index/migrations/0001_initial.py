# Generated by Django 2.2.5 on 2020-11-24 20:53

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authorization', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_classfiy', models.SmallIntegerField(choices=[(0, '买房干货'), (1, '楼市解读'), (2, '楼市百科'), (3, '房产投资')], default=0, verbose_name='文章分类')),
                ('author', models.CharField(blank=True, max_length=50, null=True, verbose_name='作者')),
                ('author_img', utils.fields.QiniuField(blank=True, max_length=255, null=True, verbose_name='作者头像')),
                ('create_time', models.DateField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='标题')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='内容')),
                ('land', models.TextField(blank=True, null=True, verbose_name='地区')),
                ('new_img', utils.fields.QiniuField(blank=True, max_length=5000, null=True, verbose_name='图片')),
            ],
            options={
                'verbose_name': '文章',
                'verbose_name_plural': '文章',
                'db_table': 'tb_article',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BuildingClassfiy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='名称')),
                ('key_name', models.CharField(max_length=50, verbose_name='类别键名')),
            ],
            options={
                'verbose_name': '楼盘其他类型',
                'verbose_name_plural': '楼盘其他类型',
                'db_table': 'tb_budling_classfiy',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BuildingDetial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_name', models.CharField(max_length=20, verbose_name='楼房名称')),
                ('total_price', models.CharField(blank=True, max_length=10, null=True, verbose_name='参考总价')),
                ('unit_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='参考单价')),
                ('house_section', models.CharField(blank=True, max_length=20, null=True, verbose_name='户型')),
                ('sale_stage', models.CharField(blank=True, max_length=20, null=True, verbose_name='销售阶段')),
                ('sale_stage_time', models.CharField(blank=True, max_length=20, null=True, verbose_name='销售阶段截止日期')),
                ('sale_building_location', models.CharField(max_length=50, verbose_name='售楼地址')),
                ('premises_location', models.CharField(max_length=50, verbose_name='楼盘地址')),
                ('delivery_time', models.CharField(blank=True, max_length=25, null=True, verbose_name='交房时间')),
                ('longitude', models.CharField(blank=True, max_length=15, null=True, verbose_name='经度')),
                ('latitude', models.CharField(blank=True, max_length=15, null=True, verbose_name='纬度')),
                ('building_nickname', models.CharField(blank=True, max_length=20, null=True, verbose_name='楼盘别名')),
                ('building_classfiy', models.CharField(blank=True, max_length=20, null=True, verbose_name='楼盘类型')),
                ('equity_year', models.CharField(blank=True, max_length=20, null=True, verbose_name='产权年限')),
                ('green_rate', models.CharField(blank=True, max_length=10, null=True, verbose_name='绿化率')),
                ('volume_rate', models.CharField(blank=True, max_length=10, null=True, verbose_name='容积率')),
                ('stall_message', models.CharField(blank=True, max_length=20, null=True, verbose_name='车位信息')),
                ('cube_count', models.CharField(blank=True, max_length=20, null=True, verbose_name='楼栋数')),
                ('all_house_count', models.CharField(blank=True, max_length=20, null=True, verbose_name='总户数')),
                ('floor_space', models.CharField(blank=True, max_length=20, null=True, verbose_name='占地面积')),
                ('covered_area', models.CharField(blank=True, max_length=20, null=True, verbose_name='建筑面积')),
                ('covered_classfiy', models.CharField(blank=True, max_length=20, null=True, verbose_name='建筑类型')),
                ('covered_tier', models.CharField(blank=True, max_length=20, null=True, verbose_name='建筑楼层')),
                ('company', models.CharField(blank=True, max_length=50, null=True, verbose_name='物业公司')),
                ('company_money', models.CharField(blank=True, max_length=50, null=True, verbose_name='物业费')),
                ('upstart', models.CharField(blank=True, max_length=50, null=True, verbose_name='开发商')),
                ('tier_condition', models.CharField(blank=True, max_length=100, null=True, verbose_name='楼层状况')),
                ('train_traffic', models.CharField(blank=True, max_length=255, null=True, verbose_name='地铁交通')),
                ('bus_site', models.CharField(blank=True, max_length=255, null=True, verbose_name='公交站点')),
                ('school', models.CharField(blank=True, max_length=255, null=True, verbose_name='学校')),
                ('bank', models.CharField(blank=True, max_length=255, null=True, verbose_name='银行')),
                ('catering', models.CharField(blank=True, max_length=100, null=True, verbose_name='餐饮')),
                ('hospital', models.CharField(blank=True, max_length=255, null=True, verbose_name='医院')),
                ('shopping', models.CharField(blank=True, max_length=255, null=True, verbose_name='购物中心')),
                ('park', models.CharField(blank=True, max_length=255, null=True, verbose_name='公园')),
                ('other_mating', models.TextField(blank=True, null=True, verbose_name='其他配套')),
                ('building_intro', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='楼盘简介')),
                ('if_index_advertising', models.SmallIntegerField(choices=[(0, 'yes'), (1, 'no')], default=0, verbose_name='是否在首页广告')),
                ('if_lunbo_choice', models.SmallIntegerField(choices=[(0, 'yes'), (1, 'no')], default=0, verbose_name='是否轮播图')),
                ('if_building_detail_advertising', models.SmallIntegerField(choices=[(0, 'yes'), (1, 'no')], default=0, verbose_name='是否在楼盘广告')),
                ('attention_degree', models.IntegerField(blank=True, default=0, null=True, verbose_name='浏览量')),
                ('comment_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='评论量')),
                ('open_house_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='开盘栋数')),
                ('open_price', models.CharField(max_length=10, verbose_name='开盘价格')),
                ('decorate_situation', models.CharField(blank=True, max_length=20, null=True, verbose_name='装修情况')),
                ('open_house_section', models.CharField(blank=True, max_length=20, null=True, verbose_name='开盘户型区间')),
                ('open_house_count', models.CharField(max_length=20, verbose_name='开盘房源套数')),
                ('registration_way', models.CharField(blank=True, max_length=20, null=True, verbose_name='报名方式')),
                ('cool_captial_request', models.CharField(blank=True, max_length=20, null=True, verbose_name='冻资要求')),
                ('house_count', models.CharField(max_length=50, verbose_name='房源套数')),
                ('people_count', models.CharField(max_length=30, verbose_name='报名人数')),
                ('win_probability', models.CharField(max_length=30, verbose_name='摇中概率')),
                ('will_sale_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='预售证号')),
                ('give_number_time', models.DateField(blank=True, null=True, verbose_name='发证时间')),
                ('lottery_count', models.CharField(blank=True, max_length=50, null=True, verbose_name='摇号批次')),
                ('building_create_time', models.DateField(auto_now_add=True, null=True, verbose_name='开盘时间')),
                ('budling_other', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='index.BuildingClassfiy', verbose_name='楼盘其他类型')),
            ],
            options={
                'verbose_name': '楼盘详情',
                'verbose_name_plural': '楼盘详情',
                'db_table': 'tb_building_detial',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BuyHouseHundredDepartmentClassfiy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='名称')),
                ('key_name', models.CharField(max_length=50, verbose_name='类别键名')),
            ],
            options={
                'verbose_name': '购房百科分类',
                'verbose_name_plural': '购房百科分类',
                'db_table': 'tb_buy_house_hundred_department_classfiy',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catgrage_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='所属id')),
                ('create_time', models.DateField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('click_count', models.IntegerField(default=0, verbose_name='点赞数')),
                ('author_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='作者名称')),
                ('author_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='作者id')),
                ('village_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='楼盘id')),
                ('title', models.CharField(blank=True, max_length=20, null=True, verbose_name='标题')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=255, null=True, verbose_name='内容')),
                ('head_img', utils.fields.QiniuField(blank=True, max_length=255, null=True, verbose_name='头像')),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论',
                'db_table': 'tb_comment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LandDistrict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10, null=True, verbose_name='区名')),
                ('key_name', models.CharField(max_length=255, verbose_name='经纬度')),
            ],
            options={
                'verbose_name': '地区',
                'verbose_name_plural': '地区',
                'db_table': 'tb_land_district',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OtherImg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_classfiy', utils.fields.QiniuField(blank=True, max_length=5000, null=True, verbose_name='服务号')),
                ('buy_house_qun', utils.fields.QiniuField(blank=True, max_length=5000, null=True, verbose_name='买房群')),
                ('feedback_img', utils.fields.QiniuField(blank=True, max_length=5000, null=True, verbose_name='公众号')),
            ],
            options={
                'verbose_name': '其他图片',
                'verbose_name_plural': '其他图片',
                'db_table': 'tb_question_other_img',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='QuestionEveryProblem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.SmallIntegerField(choices=[(0, '摇号常见问题'), (1, '公积金问题'), (2, '征信打印指南'), (3, '资料模板下载'), (4, '资格查询'), (5, '摇号流程')], default=0, verbose_name='分类')),
                ('create_time', models.DateField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='标题')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='内容')),
                ('img', utils.fields.QiniuField(blank=True, max_length=5000, null=True, verbose_name='图片')),
            ],
            options={
                'verbose_name': '7组件',
                'verbose_name_plural': '7组件',
                'db_table': 'tb_question_every_problem',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Subway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10, null=True, verbose_name='地铁线路名称')),
                ('key_name', models.CharField(max_length=10, verbose_name='类别键名')),
            ],
            options={
                'verbose_name': '地铁',
                'verbose_name_plural': '地铁',
                'db_table': 'tb_subway',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ZanCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='用户id')),
                ('create_time', models.DateField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('choice_classfiy', models.SmallIntegerField(choices=[(0, '楼盘评论赞'), (1, '赞楼盘'), (2, '赞楼盘'), (3, '赞回答里面的答')], default=0, verbose_name='点赞分类')),
                ('type_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='需要点赞内容的id')),
            ],
            options={
                'verbose_name': '点赞',
                'verbose_name_plural': '点赞',
                'db_table': 'tb_zan_count',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VRAerialPhotoAllPingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_classfiy', models.SmallIntegerField(choices=[(0, 'VR'), (1, '航拍'), (2, '总平')], default=0, verbose_name='图片类型')),
                ('building_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='楼盘id')),
                ('image_url', models.ImageField(blank=True, null=True, upload_to='', verbose_name='图片')),
                ('create_time', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('if_vr', models.SmallIntegerField(choices=[(0, 'no'), (1, 'yes')], default=0, verbose_name='是否vr')),
                ('if_aerial_photo', models.SmallIntegerField(choices=[(0, 'no'), (1, 'yes')], default=0, verbose_name='是否行拍')),
                ('if_all_ping', models.SmallIntegerField(choices=[(0, 'no'), (1, 'yes')], default=0, verbose_name='是否总平')),
                ('fuck', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='index.BuildingDetial', verbose_name='楼盘详情')),
            ],
            options={
                'verbose_name': 'VR/航拍/总平',
                'verbose_name_plural': 'VR/航拍/总平',
                'db_table': 'tb_VR_aerial_photo_all_ping_image',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserAnswerBuilding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_detial', models.CharField(blank=True, max_length=255, null=True, verbose_name='楼盘名称')),
                ('create_time', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('title', models.CharField(max_length=20, verbose_name='标题')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(max_length=255, verbose_name='内容')),
                ('click_count', models.IntegerField(default=0, verbose_name='点赞数')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.Users', verbose_name='作者')),
                ('com', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.Comment', verbose_name='楼盘评论id')),
            ],
            options={
                'verbose_name': '楼盘回复',
                'verbose_name_plural': '楼盘回复',
                'db_table': 'tb_user_answer_building',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ToldPurpose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lottery_number', models.CharField(blank=True, max_length=12, null=True, unique=True, verbose_name='摇号编码')),
                ('lottery_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='摇号姓名')),
                ('ID_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='身份证号')),
                ('audit_status', models.SmallIntegerField(choices=[(0, 'no'), (1, 'yes')], default=0, verbose_name='审核状态')),
                ('if_win_lottery', models.SmallIntegerField(choices=[(0, 'no'), (1, 'yes')], default=0, verbose_name='是否中签')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('village_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.BuildingDetial', verbose_name='楼盘名称')),
            ],
            options={
                'verbose_name': '意向登记',
                'verbose_name_plural': '意向登记',
                'db_table': 'tb_told_purpose',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SystemMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=30, null=True, verbose_name='标题')),
                ('bd_id', models.CharField(blank=True, max_length=30, null=True, verbose_name='楼盘id')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='内容')),
                ('create_time', models.DateField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='index.BuildingDetial', verbose_name='楼盘详情')),
            ],
            options={
                'verbose_name': '系统消息',
                'verbose_name_plural': '系统消息',
                'db_table': 'tb_system_message',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SubwayStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10, null=True, verbose_name='地铁站名称')),
                ('key_name', models.CharField(max_length=10, verbose_name='类别键名')),
                ('subway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.Subway', verbose_name='地铁')),
            ],
            options={
                'verbose_name': '地铁站',
                'verbose_name_plural': '地铁站',
                'db_table': 'tb_subway_station',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classfiy', models.CharField(blank=True, max_length=255, null=True, verbose_name='分享堂分类')),
                ('building_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='楼盘名称')),
                ('author', models.CharField(blank=True, max_length=25, null=True, verbose_name='作者')),
                ('create_time', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=255, null=True, verbose_name='内容')),
                ('browse_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='浏览量')),
                ('img', utils.fields.QiniuField(blank=True, max_length=5000, null=True, verbose_name='图片')),
                ('video', utils.fields.QiniuField(blank=True, max_length=5000, null=True, verbose_name='视频')),
                ('choice_classfiy', models.SmallIntegerField(choices=[(0, '公寓'), (1, '住宅')], default=0, verbose_name='住宅类型分类')),
                ('head_img', utils.fields.QiniuField(blank=True, max_length=255, null=True, verbose_name='头像')),
                ('building_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.BuildingDetial', verbose_name='发表动态所属楼盘')),
                ('middle_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.MiddlePeople', verbose_name='置业顾问id')),
            ],
            options={
                'verbose_name': '分享堂',
                'verbose_name_plural': '分享堂',
                'db_table': 'tb_share',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(blank=True, max_length=30, null=True, verbose_name='作者')),
                ('author_id', models.CharField(blank=True, max_length=30, null=True, verbose_name='作者ID')),
                ('create_time', models.DateField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('title', models.CharField(blank=True, max_length=30, null=True, verbose_name='标题')),
                ('q_type', models.CharField(blank=True, max_length=15, null=True, verbose_name='类型')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='内容')),
                ('browse_count', models.IntegerField(default=0, verbose_name='浏览量')),
                ('answer_count', models.IntegerField(default=0, verbose_name='回答量')),
                ('head_img', utils.fields.QiniuField(blank=True, max_length=255, null=True, verbose_name='头像')),
                ('choice_classfiy', models.SmallIntegerField(choices=[(0, '无'), (1, '已回答'), (2, '已解决'), (3, '未回答')], default=0, verbose_name='解决状态')),
                ('buy_house_status', models.SmallIntegerField(choices=[(0, '无'), (1, '落户'), (2, '社保'), (3, '刚需'), (4, '限购')], default=0, verbose_name='购房资格')),
                ('tou_choice', models.SmallIntegerField(choices=[(0, '无'), (1, '城市规划'), (2, '楼盘对比'), (3, '房价预测')], default=0, verbose_name='投资指南')),
                ('buy_sale_choice', models.SmallIntegerField(choices=[(0, '无'), (1, '交易过户'), (2, '公积金'), (3, '贷款')], default=0, verbose_name='买房卖房')),
                ('decoration_choice', models.SmallIntegerField(choices=[(0, '无'), (1, '精装'), (2, '毛胚')], default=0, verbose_name='装修')),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authorization.Users', verbose_name='作者')),
            ],
            options={
                'verbose_name': '问',
                'verbose_name_plural': '问',
                'db_table': 'tb_question',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PublicPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('autor', models.CharField(blank=True, max_length=55, null=True, verbose_name='作者')),
                ('title', models.CharField(blank=True, max_length=55, null=True, verbose_name='标题')),
                ('img', utils.fields.QiniuField(blank=True, max_length=5000, null=True, verbose_name='资料图片')),
                ('two_title', models.CharField(blank=True, max_length=55, null=True, verbose_name='二级标题')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='内容')),
                ('create_time', models.DateField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.BuildingDetial', verbose_name='楼盘详情')),
            ],
            options={
                'verbose_name': '楼盘选择类型',
                'verbose_name_plural': '楼盘选择类型',
                'db_table': 'tb_public_plan',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OneHouseOnePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_dong', models.CharField(blank=True, max_length=10, null=True, verbose_name='楼栋')),
                ('house_yuan', models.CharField(blank=True, max_length=10, null=True, verbose_name='单元')),
                ('house_ceng', models.CharField(blank=True, max_length=10, null=True, verbose_name='楼层')),
                ('door_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='门牌号')),
                ('if_sale', models.SmallIntegerField(choices=[(0, 'no'), (1, 'yes')], default=0, verbose_name='是否售出')),
                ('classfiy', models.CharField(blank=True, max_length=10, null=True, verbose_name='房源类型')),
                ('decorate_type', models.CharField(blank=True, max_length=10, null=True, verbose_name='装修类型')),
                ('decorate_type_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='装修价格')),
                ('area', models.FloatField(blank=True, null=True, verbose_name='建面面积')),
                ('house_xing', models.CharField(blank=True, max_length=10, null=True, verbose_name='户型')),
                ('one_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='单价')),
                ('all_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='总价')),
                ('result1', models.CharField(blank=True, max_length=25, null=True, verbose_name='房贷计算结果1')),
                ('result2', models.CharField(blank=True, max_length=25, null=True, verbose_name='房贷计算结果2')),
                ('gave_house', models.FloatField(blank=True, default=0, null=True, verbose_name='得房率')),
                ('lottery_ci', models.CharField(blank=True, max_length=10, null=True, verbose_name='摇号批次')),
                ('water_money', models.IntegerField(blank=True, default=0, null=True, verbose_name='清水价')),
                ('building_detial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.BuildingDetial', verbose_name='楼盘详情')),
            ],
            options={
                'verbose_name': '一房一价',
                'verbose_name_plural': '一房一价',
                'db_table': 'tb_one_house_one_price',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LandAuction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('if_residence', models.SmallIntegerField(choices=[(1, '住宅'), (2, '商业')], default=0, verbose_name='是否住宅')),
                ('if_sale', models.SmallIntegerField(choices=[(0, '已出让'), (1, '未出让')], default=0, verbose_name='是否出让')),
                ('land_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='地块名称')),
                ('map', utils.fields.QiniuField(blank=True, max_length=3000, null=True, verbose_name='地图')),
                ('land_region', models.CharField(blank=True, max_length=50, null=True, verbose_name='地块区域')),
                ('land_position', models.CharField(blank=True, max_length=50, null=True, verbose_name='宗地位置')),
                ('nuddle_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='楼面价')),
                ('acquisition_company', models.CharField(blank=True, max_length=20, null=True, verbose_name='竞得方')),
                ('start_parice', models.IntegerField(blank=True, default=0, null=True, verbose_name='起拍价')),
                ('end_parice', models.IntegerField(blank=True, default=0, null=True, verbose_name='成交价')),
                ('give_area', models.IntegerField(blank=True, default=0, null=True, verbose_name='出让面积')),
                ('deal_all_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='成交总价')),
                ('max_volume_rate', models.FloatField(blank=True, default=0, null=True, verbose_name='最大容积率')),
                ('overflow', models.FloatField(blank=True, default=0, null=True, verbose_name='溢价率')),
                ('land_use', models.CharField(blank=True, max_length=5, null=True, verbose_name='土地用途')),
                ('give_year', models.IntegerField(blank=True, default=0, null=True, verbose_name='出让年限')),
                ('land_ask_for', models.CharField(blank=True, max_length=5, null=True, verbose_name='宗地要求')),
                ('land_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='宗地编号')),
                ('for_remark', models.CharField(blank=True, max_length=50, null=True, verbose_name='挂牌备注')),
                ('long', models.FloatField(default=0, verbose_name='经度')),
                ('late', models.FloatField(default=0, verbose_name='纬度')),
                ('deal_date', models.CharField(blank=True, max_length=10, null=True, verbose_name='成交日期')),
                ('land_img', utils.fields.QiniuField(blank=True, max_length=5000, null=True, verbose_name='地块图片')),
                ('classfiy_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='index.LandDistrict', verbose_name='地区分类')),
            ],
            options={
                'verbose_name': '土拍',
                'verbose_name_plural': '土拍',
                'db_table': 'tb_land_auction',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IssueBuildingDynamicMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='标题')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='内容')),
                ('message_create_time', models.DateField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('author', models.CharField(blank=True, max_length=50, null=True, verbose_name='作者')),
                ('author_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='作者id')),
                ('choice_classfiy', models.SmallIntegerField(choices=[(0, '无'), (1, '楼盘动态'), (2, '预售证'), (3, '开盘'), (4, '交房')], default=0, verbose_name='类型')),
                ('img', utils.fields.QiniuField(blank=True, max_length=5000, null=True, verbose_name='图片')),
                ('building_detial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='index.BuildingDetial', verbose_name='楼盘')),
            ],
            options={
                'verbose_name': '楼盘动态信息',
                'verbose_name_plural': '楼盘动态信息',
                'db_table': 'tb_issue_building_dynamic_message',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HouseImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_classfiy', models.SmallIntegerField(choices=[(0, '其他'), (1, '两室一厅'), (2, '三室一厅'), (3, '四室一厅'), (3, '五室及以上'), (4, '一室一厅')], default=0, verbose_name='户型样式')),
                ('image', models.TextField(blank=True, max_length=5000, null=True, verbose_name='图片')),
                ('building_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='楼盘id')),
                ('house_classfiy', models.CharField(blank=True, max_length=100, null=True, verbose_name='户型分类')),
                ('house_area', models.CharField(blank=True, max_length=100, null=True, verbose_name='建筑面积')),
                ('create_time', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.BuildingDetial', verbose_name='楼盘详情')),
            ],
            options={
                'verbose_name': '户型图',
                'verbose_name_plural': '户型图',
                'db_table': 'tb_house_image',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HistoryLottery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lottery_time', models.CharField(blank=True, max_length=50, null=True, verbose_name='摇号时间')),
                ('one_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='参考单价')),
                ('all_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='参考总价')),
                ('decorate_situation', models.CharField(blank=True, max_length=20, null=True, verbose_name='装修情况')),
                ('house', models.CharField(blank=True, max_length=20, null=True, verbose_name='主力户型')),
                ('cool_captial_request', models.CharField(blank=True, max_length=20, null=True, verbose_name='冻资要求')),
                ('house_count', models.CharField(max_length=50, verbose_name='房源套数')),
                ('people_count', models.CharField(max_length=30, verbose_name='报名人数')),
                ('win_probability', models.CharField(max_length=30, verbose_name='摇中概率')),
                ('detial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.BuildingDetial', verbose_name='楼盘id')),
            ],
            options={
                'verbose_name': '历史摇号信息',
                'verbose_name_plural': '历史摇号信息',
                'db_table': 'tb_history_lottery',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BuyHouseHundredDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=30, null=True, verbose_name='标题')),
                ('two_title', models.CharField(blank=True, max_length=30, null=True, verbose_name='二级标题')),
                ('text_img', utils.fields.QiniuField(blank=True, max_length=5000, null=True, verbose_name='资料图片')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='内容')),
                ('create_time', models.DateField(auto_now_add=True, null=True, verbose_name='问题创建时间')),
                ('click_zan', models.IntegerField(blank=True, default=0, null=True, verbose_name='点赞量')),
                ('classfiy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.BuyHouseHundredDepartmentClassfiy', verbose_name='购房百科分类')),
            ],
            options={
                'verbose_name': '购房百科',
                'verbose_name_plural': '购房百科',
                'db_table': 'tb_buy_house_hundred_department',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BuildingVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_classfiy', models.SmallIntegerField(choices=[(0, '其他'), (1, '项目官方宣传'), (2, '项目周边讲解'), (3, '沙盘讲解'), (4, '样板间拍摄')], default=0, verbose_name='户型分类')),
                ('video', utils.fields.QiniuField(blank=True, max_length=5000, null=True, verbose_name='视频')),
                ('create_time', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.BuildingDetial', verbose_name='楼盘详情')),
            ],
            options={
                'verbose_name': '视频',
                'verbose_name_plural': '视频',
                'db_table': 'tb_building_video',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BuildingStatueTimeSale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('will_sale_time', models.CharField(blank=True, max_length=50, null=True, verbose_name='预售时间')),
                ('register_time', models.CharField(blank=True, max_length=50, null=True, verbose_name='登记时间')),
                ('commit_time', models.CharField(blank=True, max_length=50, null=True, verbose_name='补交资料时间')),
                ('want_told_time', models.CharField(blank=True, max_length=50, null=True, verbose_name='意向公示时间')),
                ('lottery_time', models.CharField(blank=True, max_length=50, null=True, verbose_name='摇号时间')),
                ('choice_house_time', models.CharField(blank=True, max_length=50, null=True, verbose_name='选房时间')),
                ('fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.BuildingDetial', verbose_name='楼盘详情')),
            ],
            options={
                'verbose_name': '楼盘销售时间',
                'verbose_name_plural': '楼盘销售时间',
                'db_table': 'tb_budling_statue_time_sale',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BuildingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_classfiy', models.SmallIntegerField(choices=[(0, '全部'), (1, '实景图'), (2, '项目周边'), (3, '样板间'), (4, '效果图'), (5, '鸟瞰图')], default=0, verbose_name='户型分类')),
                ('photo_image', utils.fields.QiniuField(blank=True, max_length=5000, null=True, verbose_name='图片')),
                ('create_time', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.BuildingDetial', verbose_name='楼盘详情')),
            ],
            options={
                'verbose_name': '楼盘图片',
                'verbose_name_plural': '楼盘图片',
                'db_table': 'tb_building_image',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='buildingdetial',
            name='land',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='index.LandDistrict', verbose_name='地区'),
        ),
        migrations.AddField(
            model_name='buildingdetial',
            name='train',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='index.SubwayStation', verbose_name='地铁站'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('com', models.CharField(blank=True, max_length=255, null=True, verbose_name='评论id')),
                ('create_time', models.DateField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='内容')),
                ('aut', models.TextField(blank=True, null=True, verbose_name='作者')),
                ('aut_id', models.TextField(blank=True, null=True, verbose_name='作者id')),
                ('head_img', utils.fields.QiniuField(blank=True, max_length=255, null=True, verbose_name='头像')),
                ('click_count', models.IntegerField(default=0, verbose_name='点赞数')),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='index.Question', verbose_name='问题')),
            ],
            options={
                'verbose_name': '答',
                'verbose_name_plural': '答',
                'db_table': 'tb_answer',
                'managed': True,
            },
        ),
    ]
